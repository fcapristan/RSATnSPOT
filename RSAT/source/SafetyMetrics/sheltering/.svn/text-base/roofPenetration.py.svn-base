# roof models for calculating casualty areas from debris weight

# Wood 
def getModel():
    from scipy import interpolate
    # data digitized from "Large Region Population Sheltering Models for Space Debris Risk Analysis" - Erik W. F. Larson
    # returns a list with the different roof models..ALL UNITS IN SI
    # data has been expanded to return logical values in case some extrapolation is needed when doing the expectation calculation
    woodWeight = [-10000.0,
                  0.0,
                  0.43,
                  0.43025,
                0.438297,
                0.438444,
                0.446672,
                0.454998,
                0.507711,
                0.576914,
                0.885167,
                1.42143,
                2.41076,
                2.97266,
                3.40845,
                6.82344,
                8.89053,
                11.0659,
                14.9491,
                18.7743,
                23.1548,
                31.57,
                39.6554,
                54.0648,
                69.7838,
                117.3,
                1323.68,
                  1e6,]
    woodCasualtyArea = [0.0,
                        0.0,
                        0.0,
                        0.103118,
                    0.130885,
                    0.168707,
                    0.224251,
                    0.271798,
                    0.347621,
                    0.427813,
                    0.43427,
                    0.447641,
                    0.457863,
                    0.472077,
                    0.542114,
                    2.31852,
                    3.37909,
                    4.22271,
                    5.03855,
                    5.61026,
                    6.69476,
                    8.69349,
                    11.1174,
                    13.8919,
                    16.1984,
                    18.7384,
                    33.8049,
                    33.8049]
    tileWeight = [-10000.0,
                  0.0,
                  0.56,
                  0.560304,
                  0.560532,
                  0.57627,
                  0.614399,
                  0.730918,
                  1.01474,
                  1.51506,
                  2.2619,
                  2.97288,
                  4.05176,
                  5.37443,
                  8.56994,
                  9.73856,
                  11.7972,
                  15.5054,
                  19.8274,
                  25.8257,
                  44.2355,
                  87.64,
                  1348.01,
                  1e6]
    tileCasualtyArea = [0.,
                        0.0,
                        0.,
                        0.102302,
                        0.13916,
                        0.183557,
                        0.232974,
                        0.369558,
                        0.434215,
                        0.461601,
                        0.464989,
                        0.498193,
                        0.482957,
                        0.546065,
                        2.70354,
                        3.45767,
                        5.0786,
                        5.44125,
                        5.31589,
                        6.10381,
                        11.2021,
                        18.0363,
                        33.8043,
                        33.8043]
    lightMetalWeight = [-10000.0,
                        0.0,
                        1.23,
                        1.2375,
                        1.55624,
                        2.10309,
                        3.73342,
                        5.99554,
                        6.6883,
                        9.03318,
                        11.6595,
                        18.759,
                        23.1409,
                        29.0639,
                        55.5127,
                        95.9119,
                        141.946,
                        208.2,
                        353.318,
                        588.587,
                        1231.17,
                        1e6]
    lightMetalCasualtyArea = [0.,
                              0.,
                              0.,
                              0.102226,
                              0.314208,
                              0.486987,
                              0.537913,
                              0.576216,
                              0.598748,
                              0.593992,
                              0.692614,
                              3.03196,
                              4.25236,
                              4.95852,
                              7.05931,
                              9.2356,
                              12.3667,
                              18.4424,
                              29.4704,
                              37.6775,
                              46.3426,
                              46.3426]
    compositeWeight = [-10000.,
                       0.0,
                       0.41,
                       0.414854,
                       0.438551,
                       0.592841,
                       0.869207,
                       1.81794,
                       4.6032,
                       14.1168,
                       16.9368,
                       22.6683,
                       27.701,
                       38.1261,
                       65.9359,
                       79.1347,
                       102.148,
                       131.827,
                       164.056,
                       225.733,
                       588.294,
                       680.694,
                       1300.31,
                       1e6]
    compositeCasualtyArea = [0.0,
                             0.0,
                             0.0,
                             0.102331,
                             0.202914,
                             0.399187,
                             0.441011,
                             0.494605,
                             0.517515,
                             0.681917,
                             0.666246,
                             0.681613,
                             0.753157,
                             1.24138,
                             3.37271,
                             4.28024,
                             5.18659,
                             5.38867,
                             5.95418,
                             7.91224,
                             25.8455,
                             29.2265,
                             45.9851,
                             45.9851]
    steelWeight = [-1000.,
                   0.0,
                   3.3,
                   3.31557,
                   4.16573,
                   5.62678,
                   6.81194,
                   9.80581,
                   30.3479,
                   37.4181,
                   49.186,
                   83.5684,
                   106.926,
                   178.157,
                   372.992,
                   508.535,
                   712.452,
                   1324.24,
                   1e6]
    steelCasualtyArea = [0.0,
                         0.0,
                         0.0,
                         0.430407,
                         0.662015,
                         0.70927,
                         0.646613,
                         0.641438,
                         0.864932,
                         0.832132,
                         0.985319,
                         3.87271,
                         5.91094,
                         8.61281,
                         20.8463,
                         26.4525,
                         30.6057,
                         46.6972,
                         46.6972]
    concreteWeight = [-1000.0,
                      0.0,
                      14.4,
                      14.4949,
                      19.2389,
                      23.9432,
                      31.1825,
                      64.6299,
                      84.9577,
                      107.652,
                      140.311,
                      176.443,
                      225.792,
                      372.745,
                      831.903,
                      1324.42,
                      1e6]
    concreteCasualtyArea = [0.0,
                            0.0,
                            0.0,
                            0.346524,
                            0.636118,
                            0.719284,
                            0.747302,
                            0.87099,
                            1.04732,
                            1.00758,
                            1.89283,
                            5.64166,
                            9.66405,
                            12.6439,
                            34.8765,
                            51.6085,
                            51.6085]
    wood = [woodWeight,woodCasualtyArea]
    tile = [tileWeight,tileCasualtyArea]
    lightMetal = [lightMetalWeight,lightMetalCasualtyArea]
    composite = [compositeWeight,compositeCasualtyArea]
    steel = [steelWeight,steelCasualtyArea]
    concrete = [concreteWeight,concreteCasualtyArea]
    
    fwood = interpolate.interp1d(wood[0],wood[1])
    ftile = interpolate.interp1d(tile[0],tile[1])
    flightMetal = interpolate.interp1d(lightMetal[0],lightMetal[1])
    fcomposite = interpolate.interp1d(composite[0],composite[1])
    fsteel = interpolate.interp1d(steel[0],steel[1])
    fconcrete = interpolate.interp1d(concrete[0],concrete[1])
    #return (fwood,ftile,flightMetal,fcomposite,fsteel,fconcrete)
    return (fwood,fsteel,fconcrete,fcomposite,flightMetal,ftile)

def Expectation(model,dist,distparam1,distparam2,Aproj,distparamextra = 0):
    from scipy import integrate
    import numpy as np
# this routine takes in the name of the roof model desired, the distibution of mass to be integrated with respect to,
# and parameters needed to define the distribution
    #fwood,fsteel,fconcrete,fcomposite,flightMetal,ftile= getModel()
    functions = getModel()
    if model.lower()=='all':
    # HERE COMES AN ASSUMPTION TO GIVE ROOF CASUALTY AREA TO ROOF TYPES FOR WHICH DATA IS NOT AVAILABLE:
        # assuming that all roof of similar types have the same casualty areas. e.g all wood roofs are the same
    # the order of models is assumed to be as follows
    # Wood Roof, Wood 1st, Wood 2nd, Steel Roof, Steel 1st, Steel 2nd, Concrete, Concrete 1st, Concrete 2nd, Composite
    # Light Metal, Tile Roof, Tile 1st, Tile 2nd, Car, Open
        
        if dist.lower() =='uniform':
            lowbound = distparam1
            highbound = distparam2
            denc = highbound-lowbound
            if denc>0.:
                c = 1./denc
            elif denc<0.:
                print 'Check bounds in upper and lower bound. roofPenetration.Expectation'
                exit(1)

        elif dist.lower() =='gaussian' or dist.lower() == 'normal' or dist.lower()=='gauss':
            mu = distparam1
            sigma = distparam2
            lowbound = max(-1e3,mu-5.*sigma)
            highbound = min(1e6,mu+5.*sigma)
            fgauss = lambda x: np.exp(-.5*((x-mu)/sigma)**2)/(sigma*(2.*np.pi)**.5)
        
        EretMain = np.zeros((len(functions)))
        for index in range(len(functions)):
            froof = functions[index]
        
            if dist.lower() =='uniform':
                if denc ==0.0:
                    retval = froof(lowbound)
                else:
                    invals = integrate.fixed_quad(froof,lowbound,highbound,n=50)
                    retval = invals[0]*c
            elif dist.lower() =='gaussian' or dist.lower() == 'normal' or dist.lower()=='gauss':
                fvals = lambda x: fgauss(x)*froof(x)
                invals = integrate.fixed_quad(fvals,lowbound,highbound,n=50)
                retval = invals[0]
                
            EretMain[index] = retval
        Eret = np.zeros((16))
        Eret = np.concatenate((3*[EretMain[0]],3*[EretMain[1]],3*[EretMain[2]],[EretMain[3]],[EretMain[4]],3*[EretMain[5]],[EretMain[4]],[Aproj]),1)
        return Eret
        
#Expectation('all','uniform',10,100)
        
        


